name: Fetch Cisco JSON

on:
  workflow_call:
    secrets:
      CISCO_CLIENT_KEY:
        required: true
      CISCO_CLIENT_SECRET:
        required: true
  workflow_dispatch:

jobs:
  fetch:
    name: Fetch vuls-data-raw-cisco-json
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: main

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json
        run: vuls-data-update dotgit pull --dir . --checkout main ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json

      - name: Fetch
        run: vuls-data-update fetch cisco-json --dir ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json ${{ secrets.CISCO_CLIENT_KEY }} ${{ secrets.CISCO_CLIENT_SECRET }}

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json remote add origin ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json commit -m "update"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-raw-cisco-json

      - name: Login to GitHub Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json
        run: vuls-data-update dotgit registry push --force ghcr.io/${{ github.repository }}:vuls-data-raw-cisco-json vuls-data-raw-cisco-json.tar.zst
