name: Extract RedHat RHEL Only (OVALv2)

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: choice
        options:
          - main
          - nightly

jobs:
  extract:
    name: Extract vuls-data-extracted-redhat-ovalv2-rhel@${{ inputs.branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: ${{ inputs.branch }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-redhat-ovalv2
        run: vuls-data-update dotgit pull --dir . --checkout main --restore ghcr.io/${{ github.repository }}:vuls-data-raw-redhat-ovalv2

      - name: Remove unnecessary streams
        run: |
          rm -rf ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2/5
          find ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2/6 -mindepth 1 -maxdepth 1 ! -name 'rhel-6-including-unpatched' ! -name 'rhel-6-extras-including-unpatched' ! -name 'rhel-6-supplementary' ! -name 'rhel-6-els' | xargs rm -rf
          find ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2/7 -mindepth 1 -maxdepth 1 ! -name 'rhel-7-including-unpatched' ! -name 'rhel-7-extras-including-unpatched' ! -name 'rhel-7-supplementary' | xargs rm -rf
          find ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2/8 -mindepth 1 -maxdepth 1 ! -name 'rhel-8-including-unpatched' | xargs rm -rf
          find ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2/9 -mindepth 1 -maxdepth 1 ! -name 'rhel-9-including-unpatched' | xargs rm -rf

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-redhat-repository-to-cpe
        run: vuls-data-update dotgit pull --dir . --checkout main --restore ghcr.io/${{ github.repository }}:vuls-data-raw-redhat-repository-to-cpe

      - name: Replace empty repository-to-cpe data
        run: |
          echo "{}" > ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-repository-to-cpe/repository-to-cpe.json

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel
        run: vuls-data-update dotgit pull --dir . --checkout ${{ inputs.branch }} ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel

      - name: Extract
        run: vuls-data-update extract redhat-ovalv2 --dir ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-ovalv2 ghcr.io/${{ github.repository }}/vuls-data-raw-redhat-repository-to-cpe

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel remote add origin ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel commit -m "update"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-extracted-redhat-ovalv2-rhel

      - name: Login to GitHub Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel
        run: vuls-data-update dotgit registry push --force ghcr.io/${{ github.repository }}:vuls-data-extracted-redhat-ovalv2-rhel vuls-data-extracted-redhat-ovalv2-rhel.tar.zst
