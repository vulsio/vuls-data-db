name: Fetch Main

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      target:
        required: true
        type: choice
        options:
          - alma-errata
          - alma-osv
          - alma-oval
          - alpine-osv
          - alpine-secdb
          - alt-oval
          - amazon
          - android-osv
          - anolis-oval
          - arch
          - bitnami-osv
          # - cargo-db
          - cargo-ghsa
          - cargo-osv
          - chainguard-osv
          - chainguard-secdb
          - cisa-kev
          # - composer-db
          - composer-ghsa
          - composer-glsa
          - composer-osv
          - conan-glsa
          - debian-osv
          - debian-oval
          - debian-security-tracker-api
          - debian-security-tracker-salsa
          - echo
          - endoflife-date-api
          - endoflife-date-products
          - erlang-ghsa
          - erlang-osv
          - exploit-exploitdb
          - exploit-github
          - exploit-inthewild
          - exploit-trickest
          - freebsd
          - gentoo
          - ghactions-osv
          - git-osv
          # - golang-db
          - golang-ghsa
          - golang-glsa
          - golang-osv
          # - golang-vulndb
          - haskell-osv
          - jvn-feed-detail
          - jvn-feed-product
          - jvn-feed-rss
          - k8s-json
          - k8s-osv
          - linux-osv
          - mageia-osv
          - maven-ghsa
          - maven-glsa
          - maven-osv
          - microsoft-advisory
          - microsoft-azure-oval
          - microsoft-bulletin
          - microsoft-csaf
          - microsoft-cvrf
          - microsoft-deployment
          - microsoft-product
          - microsoft-vulnerability
          - microsoft-wsusscn2
          - minimos-secdb
          - mitre-attack
          - mitre-capec
          - mitre-cvrf
          - mitre-cwe
          - mitre-emb3d
          - mitre-v4
          - mitre-v5
          - msf
          - netbsd
          # - npm-db
          - npm-ghsa
          - npm-glsa
          - npm-osv
          - nuclei-repository
          - nuget-ghsa
          - nuget-glsa
          - nuget-osv
          - nvd-feed-cpe-v1
          - nvd-feed-cpematch-v1
          - nvd-feed-cve-v1
          - nvd-feed-cpe-v2
          - nvd-feed-cpematch-v2
          - nvd-feed-cve-v2
          - openeuler-csaf
          - openeuler-cvrf
          - oracle-linux
          - oss-fuzz-osv
          - paloalto-list
          # - perl-db
          - photon-cve
          - photon-oval
          # - pip-db
          - pip-ghsa
          - pip-glsa
          - pip-osv
          - pub-ghsa
          - pub-osv
          - r-osv
          - redhat-appstream-lifecycle
          - redhat-csaf
          - redhat-cve
          - redhat-cvrf
          - redhat-osv
          - redhat-ovalv1
          - redhat-ovalv2
          - redhat-package-manifest
          - redhat-repository-to-cpe
          - redhat-vex
          - rocky-errata
          - rocky-osv
          # - rubygems-db
          - rubygems-ghsa
          - rubygems-glsa
          - rubygems-osv
          - snort
          - suse-csaf
          - suse-csaf-vex
          - suse-cvrf
          - suse-cvrf-cve
          - suse-osv
          - suse-oval
          - swift-ghsa
          - swift-osv
          - ubuntu-cve
          - ubuntu-cve-tracker
          - ubuntu-notice
          - ubuntu-osv
          - ubuntu-oval
          - ubuntu-usndb
          - ubuntu-vex
          - wolfi-osv
          - wolfi-secdb
          - wrlinux

jobs:
  fetch:
    name: Fetch vuls-data-raw-${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: main

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
        run: vuls-data-update dotgit pull --dir . --checkout main ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}

      - name: install cabextract for microsoft-wsusscn2
        if: ${{ inputs.target == 'microsoft-wsusscn2' }}
        run: sudo apt-get update && sudo apt-get install -y cabextract

      - name: Fetch
        run: vuls-data-update fetch ${{ inputs.target }} --dir ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }}

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote add origin ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} commit -m "update" -m "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ job.check_run_id }}"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
        run: vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }} vuls-data-raw-${{ inputs.target }}.tar.zst
