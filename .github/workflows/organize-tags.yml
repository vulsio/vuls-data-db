name: Organize Tags

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      package:
        required: true
        default: "vuls-data-db"
        type: choice
        options:
          - vuls-data-db
          - vuls-data-db-archive
          - vuls-data-db-backup

jobs:
  organize:
    name: Organize tags in vulsio/${{ inputs.package }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Oras
        run: |
          # https://oras.land/docs/installation/#linux
          VERSION="1.2.2"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Organize tags in vulsio/${{ inputs.package }}
        run: |
          jq --argjson new "$(gh api --paginate /orgs/vulsio/packages/container/${{ inputs.package }}/versions | jq 'reduce .[] as $item ({}; 
            if $item.metadata.container.tags | length > 0 then 
              reduce $item.metadata.container.tags[] as $tag (.;
                  .[$tag] = {
                      "name": $item.name,
                      "created_at": $item.created_at,
                      "updated_at": $item.updated_at
                  }
              )
            else . end
          )')" '.["vulsio/${{ inputs.package }}"] |= $new' images.json > tmp.json
          mv tmp.json images.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update layer size
        run: |
          for tag in $(jq -r '.["vulsio/${{ inputs.package }}"] | keys[]' images.json); do 
            jq --arg tag "$tag" --arg size "$(oras manifest fetch ghcr.io/vulsio/${{ inputs.package }}:${tag} | jq '.layers[] | select(.mediaType == "application/vnd.vulsio.vuls-data-db.dotgit.layer.v1.tar+zstd") | .size')" '
              .["vulsio/${{ inputs.package }}"][$tag].size |= $size
            ' images.json > tmp.json
            mv tmp.json images.json
          done

      - name: Set Git config
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

      - name: Push
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git add images.json
            git commit -m "update"
            git push
          fi
