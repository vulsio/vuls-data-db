name: Extract All

on:
  workflow_run:
    workflows: [Archive Raw]
    types:
      - completed
  workflow_dispatch:
    inputs:
      gc_after_extract:
        description: "Git GC after extract"
        required: true
        default: false
        type: boolean

jobs:
  extract-main:
    name: Extract vuls-data-extracted-${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - "alma-errata"
          - "alma-osv"
          # - "alma-oval"
          - "alpine-secdb"
          - "alpine-osv"
          - "amazon"
          # - "android-osv"
          - "arch"
          # - "attack"
          # - "bitnami-osv"
          # - "capec"
          # - "cargo-ghsa"
          # - "cargo-osv"
          # - "cargo-db"
          # - "chainguard-osv"
          # - "composer-ghsa"
          # - "composer-glsa"
          # - "composer-osv"
          # - "composer-db"
          # - "conan-glsa"
          # - "cwe"
          # - "debian-osv"
          # - "debian-oval"
          # - "debian-security-tracker-api"
          # - "debian-security-tracker-salsa"
          - "epss"
          # - "erlang-ghsa"
          # - "erlang-osv"
          # - "exploit-exploitdb"
          # - "exploit-github"
          # - "exploit-inthewild"
          # - "exploit-trickest"
          # - "fedora"
          # - "fortinet-handmade"
          # - "fortinet-cvrf"
          - "freebsd"
          # - "gentoo"
          # - "ghactions-osv"
          # - "git-osv"
          # - "golang-ghsa"
          # - "golang-glsa"
          # - "golang-osv"
          # - "golang-db"
          # - "golang-vulndb"
          # - "haskell-osv"
          # - "jvn-feed-detail"
          # - "jvn-feed-product"
          # - "jvn-feed-rss"
          - "kev"
          # - "linux-osv"
          # - "maven-ghsa"
          # - "maven-glsa"
          # - "maven-osv"
          # - "mitre-cvrf"
          # - "mitre-v4"
          - "mitre-v5"
          # - "msf"
          # - "netbsd"
          # - "npm-ghsa"
          # - "npm-glsa"
          # - "npm-osv"
          # - "npm-db"
          # - "nuget-ghsa"
          # - "nuget-glsa"
          # - "nuget-osv"
          # - "nvd-api-cpe"
          # - "nvd-feed-cve"
          # - "nvd-feed-cpe"
          # - "nvd-feed-cpematch"
          - "oracle"
          # - "oss-fuzz-osv"
          # - "perl-db"
          # - "pip-ghsa"
          # - "pip-glsa"
          # - "pip-osv"
          # - "pip-db"
          # - "pub-ghsa"
          # - "pub-osv"
          # - "r-osv"
          # - "redhat-cve"
          # - "redhat-cvrf"
          # - "redhat-osv"
          - "rocky-errata"
          # - "rocky-osv"
          # - "rubygems-ghsa"
          # - "rubygems-glsa"
          # - "rubygems-osv"
          # - "rubygems-db"
          # - "snort"
          # - "suse-oval"
          # - "suse-cvrf"
          # - "suse-cvrf-cve"
          # - "suse-csaf"
          # - "suse-csaf-vex"
          # - "suse-osv"
          # - "swift-ghsa"
          # - "swift-osv"
          # - "ubuntu-oval"
          # - "ubuntu-cve-tracker"
          # - "ubuntu-osv"
          # - "vulncheck-kev"
          # - "windows-bulletin"
          # - "windows-cvrf"
          # - "windows-msuc"
          # - "windows-wsusscn2"
          # - "wolfi-osv"
    uses: ./.github/workflows/extract-main.yml
    with:
      target: ${{ matrix.target }}
      branch: main

  extract-main-nightly:
    name: Extract vuls-data-extracted-${{ matrix.target }}
    if: ${{ success() || failure() }}
    needs: [extract-main]
    strategy:
      fail-fast: false
      matrix:
        target:
          - "alma-errata"
          - "alma-osv"
          # - "alma-oval"
          - "alpine-secdb"
          - "alpine-osv"
          - "amazon"
          # - "android-osv"
          - "arch"
          # - "attack"
          # - "bitnami-osv"
          # - "capec"
          # - "cargo-ghsa"
          # - "cargo-osv"
          # - "cargo-db"
          # - "chainguard-osv"
          # - "composer-ghsa"
          # - "composer-glsa"
          # - "composer-osv"
          # - "composer-db"
          # - "conan-glsa"
          # - "cwe"
          # - "debian-osv"
          # - "debian-oval"
          # - "debian-security-tracker-api"
          # - "debian-security-tracker-salsa"
          - "epss"
          # - "erlang-ghsa"
          # - "erlang-osv"
          # - "exploit-exploitdb"
          # - "exploit-github"
          # - "exploit-inthewild"
          # - "exploit-trickest"
          # - "fedora"
          # - "fortinet-handmade"
          # - "fortinet-cvrf"
          - "freebsd"
          # - "gentoo"
          # - "ghactions-osv"
          # - "git-osv"
          # - "golang-ghsa"
          # - "golang-glsa"
          # - "golang-osv"
          # - "golang-db"
          # - "golang-vulndb"
          # - "haskell-osv"
          # - "jvn-feed-detail"
          # - "jvn-feed-product"
          # - "jvn-feed-rss"
          - "kev"
          # - "linux-osv"
          # - "maven-ghsa"
          # - "maven-glsa"
          # - "maven-osv"
          # - "mitre-cvrf"
          # - "mitre-v4"
          - "mitre-v5"
          # - "msf"
          # - "netbsd"
          # - "npm-ghsa"
          # - "npm-glsa"
          # - "npm-osv"
          # - "npm-db"
          # - "nuget-ghsa"
          # - "nuget-glsa"
          # - "nuget-osv"
          # - "nvd-api-cpe"
          # - "nvd-feed-cve"
          # - "nvd-feed-cpe"
          # - "nvd-feed-cpematch"
          - "oracle"
          # - "oss-fuzz-osv"
          # - "perl-db"
          # - "pip-ghsa"
          # - "pip-glsa"
          # - "pip-osv"
          # - "pip-db"
          # - "pub-ghsa"
          # - "pub-osv"
          # - "r-osv"
          # - "redhat-cve"
          # - "redhat-cvrf"
          # - "redhat-osv"
          - "rocky-errata"
          # - "rocky-osv"
          # - "rubygems-ghsa"
          # - "rubygems-glsa"
          # - "rubygems-osv"
          # - "rubygems-db"
          # - "snort"
          # - "suse-oval"
          # - "suse-cvrf"
          # - "suse-cvrf-cve"
          # - "suse-csaf"
          # - "suse-csaf-vex"
          # - "suse-osv"
          # - "swift-ghsa"
          # - "swift-osv"
          # - "ubuntu-oval"
          # - "ubuntu-cve-tracker"
          # - "ubuntu-osv"
          # - "vulncheck-kev"
          # - "windows-bulletin"
          # - "windows-cvrf"
          # - "windows-msuc"
          # - "windows-wsusscn2"
          # - "wolfi-osv"
    uses: ./.github/workflows/extract-main.yml
    with:
      target: ${{ matrix.target }}
      branch: nightly

  extract-redhat:
    name: Extract vuls-data-extracted-${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - "redhat-ovalv1"
          - "redhat-ovalv2"
          - "redhat-csaf"
          - "redhat-vex"
    uses: ./.github/workflows/extract-redhat.yml
    with:
      target: ${{ matrix.target }}
      branch: main

  extract-redhat-nightly:
    name: Extract vuls-data-extracted-${{ matrix.target }}
    if: ${{ success() || failure() }}
    needs: [extract-redhat]
    strategy:
      fail-fast: false
      matrix:
        target:
          - "redhat-ovalv1"
          - "redhat-ovalv2"
          - "redhat-csaf"
          - "redhat-vex"
    uses: ./.github/workflows/extract-redhat.yml
    with:
      target: ${{ matrix.target }}
      branch: nightly

  # extract-redhat-rhel-ovalv1:
  #   name: Extract vuls-data-extracted-redhat-ovalv1-rhel
  #   uses: ./.github/workflows/extract-redhat-rhel-ovalv1.yml
  #   with:
  #     branch: main

  # extract-redhat-rhel-ovalv1-nightly:
  #   name: Extract vuls-data-extracted-redhat-ovalv1-rhel
  #   if: ${{ success() || failure() }}
  #   needs: [extract-redhat-rhel-ovalv1]
  #   uses: ./.github/workflows/extract-redhat-rhel-ovalv1.yml
  #   with:
  #     branch: nightly

  extract-redhat-rhel-ovalv2:
    name: Extract vuls-data-extracted-redhat-ovalv2-rhel
    uses: ./.github/workflows/extract-redhat-rhel-ovalv2.yml
    with:
      branch: main

  extract-redhat-rhel-ovalv2-nightly:
    name: Extract vuls-data-extracted-redhat-ovalv2-rhel
    if: ${{ success() || failure() }}
    needs: [extract-redhat-rhel-ovalv2]
    uses: ./.github/workflows/extract-redhat-rhel-ovalv2.yml
    with:
      branch: nightly

  extract-redhat-csaf-or-vex-rhel:
    name: Extract vuls-data-extracted-${{ matrix.target }}-rhel
    if: ${{ success() || failure() }}
    needs: [extract-redhat, extract-redhat-nightly]
    strategy:
      fail-fast: false
      matrix:
        target:
          - "redhat-csaf"
          - "redhat-vex"
    uses: ./.github/workflows/extract-redhat-rhel-csaf-or-vex.yml
    with:
      target: ${{ matrix.target }}
      branch: main

  extract-redhat-csaf-or-vex-rhel-nightly:
    name: Extract vuls-data-extracted-${{ matrix.target }}-rhel
    if: ${{ success() || failure() }}
    needs: [extract-redhat-csaf-or-vex-rhel]
    strategy:
      fail-fast: false
      matrix:
        target:
          - "redhat-csaf"
          - "redhat-vex"
    uses: ./.github/workflows/extract-redhat-rhel-csaf-or-vex.yml
    with:
      target: ${{ matrix.target }}
      branch: nightly

  extract-nvd-api-cve:
    name: Extract vuls-data-extracted-nvd-api-cve
    uses: ./.github/workflows/extract-nvd-api-cve.yml
    with:
      branch: main

  extract-nvd-api-cve-nightly:
    name: Extract vuls-data-extracted-nvd-api-cve
    if: ${{ success() || failure() }}
    needs: [extract-nvd-api-cve]
    uses: ./.github/workflows/extract-nvd-api-cve.yml
    with:
      branch: nightly

  extract-eol:
    name: Extract vuls-data-extracted-eol
    uses: ./.github/workflows/extract-eol.yml
    with:
      branch: main

  extract-eol-nightly:
    name: Extract vuls-data-extracted-eol
    if: ${{ success() || failure() }}
    needs: [extract-eol]
    uses: ./.github/workflows/extract-eol.yml
    with:
      branch: nightly

  check:
    name: Decide whether to Git GC
    if: ${{ success() || failure() }}
    needs:
      [
        extract-main,
        extract-main-nightly,
        extract-redhat,
        extract-redhat-nightly,
        extract-redhat-csaf-or-vex-rhel,
        extract-redhat-csaf-or-vex-rhel-nightly,
        extract-nvd-api-cve,
        extract-nvd-api-cve-nightly,
        extract-eol,
        extract-eol-nightly,
      ]
    runs-on: ubuntu-latest
    outputs:
      do_gc: ${{ steps.check.outputs.do_gc }}
    steps:
      - name: Check if Git GC is needed
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "do_gc=${{ inputs.gc_after_extract }}" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [[ $(( ${{ github.run_number }} % 10 )) -eq 0 ]]; then
            echo "do_gc=true" >> $GITHUB_OUTPUT
          fi

  gc:
    name: Git GC Extracted
    needs: check
    if: ${{ needs.check.outputs.do_gc == 'true' }}
    uses: ./.github/workflows/gc-extracted.yml
