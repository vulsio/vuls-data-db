name: Fetch Palo Alto (JSON, CSAF)

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      target:
        required: true
        type: choice
        options:
          - paloalto-json
          - paloalto-csaf

jobs:
  fetch:
    name: Fetch vuls-data-raw-${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: main

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-paloalto-list
        run: vuls-data-update dotgit pull --dir . --checkout main --restore ghcr.io/${{ github.repository }}:vuls-data-raw-paloalto-list

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
        run: vuls-data-update dotgit pull --dir . --checkout main ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}

      - name: Fetch
        run: vuls-data-update fetch ${{ inputs.target }} --dir ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} $(find ghcr.io/${{ github.repository }}/vuls-data-raw-paloalto-list -name "*.json" | xargs -I {} basename {} .json | tr '\n' ' ')

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} remote add origin ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }} commit -m "update" -m "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ job.check_run_id }}"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
        run: vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }} vuls-data-raw-${{ inputs.target }}.tar.zst
