name: Extract EOL

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: choice
        options:
          - main
          - nightly

jobs:
  extract:
    name: Extract vuls-data-extracted-eol@${{ inputs.branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Install Oras
        run: |
          # https://oras.land/docs/installation/#linux
          VERSION="1.2.2"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          repository: MaineK00n/vuls-data-update
          ref: ${{ inputs.branch }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-extracted-eol
        run: |
          oras pull ghcr.io/${{ github.repository }}:vuls-data-extracted-eol
          tar -xf vuls-data-extracted-eol.tar.zst
          rm vuls-data-extracted-eol.tar.zst
          git -C vuls-data-extracted-eol switch ${{ inputs.branch }}

      - name: Extract
        run: vuls-data-update extract eol --dir vuls-data-extracted-eol

      - name: Set Git config
        run: |
          git -C vuls-data-extracted-eol remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-extracted-eol
          git -C vuls-data-extracted-eol config user.email "action@github.com"
          git -C vuls-data-extracted-eol config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C vuls-data-extracted-eol status --porcelain) ]]; then
            git -C vuls-data-extracted-eol add .
            git -C vuls-data-extracted-eol commit -m "update"
          fi

      - name: Create dotgit tarball
        run: |
          mv vuls-data-extracted-eol vuls-data-extracted-eol.tmp
          mkdir vuls-data-extracted-eol
          mv vuls-data-extracted-eol.tmp/.git vuls-data-extracted-eol
          tar --remove-files -acf vuls-data-extracted-eol.tar.zst vuls-data-extracted-eol || [[ $? == 1 ]]

      - name: Login to GitHub Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-extracted-eol
        run: |
          oras push ghcr.io/${{ github.repository }}:vuls-data-extracted-eol vuls-data-extracted-eol.tar.zst:application/vnd.vulsio.vuls-data-db.dotgit.layer.v1.tar+zstd
