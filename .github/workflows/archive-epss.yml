name: Archive EPSS

on:
  workflow_call:
  workflow_dispatch:

jobs:
  archive:
    name: Archive vuls-data-raw-epss
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.push_archive.outputs.tags }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - name: Install vuls-data-update
        run: go install github.com/MaineK00n/vuls-data-update/cmd/vuls-data-update@main

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-epss
        run: vuls-data-update dotgit pull --dir . --checkout main --restore ghcr.io/${{ github.repository }}:vuls-data-raw-epss

      - name: Push archive
        id: push_archive
        run: |
          cd ghcr.io/${{ github.repository }}/vuls-data-raw-epss/

          tags=()
          for y in *; do
            if [[ ${y} == $(date "+%Y") ]]; then
              continue
            fi

            mkdir vuls-data-raw-epss/
            mv ${y} vuls-data-raw-epss
            git -C vuls-data-raw-epss -c init.defaultBranch=main init .
            git -C vuls-data-raw-epss config user.email "action@github.com"
            git -C vuls-data-raw-epss config user.name "GitHub Action"
            git -C vuls-data-raw-epss add ${y}
            git -C vuls-data-raw-epss commit -m "update" -m "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ job.check_run_id }}"

            vuls-data-update dotgit compress vuls-data-raw-epss
            vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/vulsio/vuls-data-db-archive:vuls-data-raw-epss-archive-$(( ${y} - 2020 )) vuls-data-raw-epss.tar.zst
            rm -rf vuls-data-raw-epss/ vuls-data-raw-epss.tar.zst
            
            tags+=("\"vuls-data-raw-epss-archive-$(( ${y} - 2020 ))\"")

          done

          echo "tags=[$(IFS=,; echo "${tags[*]}")]" >> "$GITHUB_OUTPUT"

      - name: Push latest
        if: ${{ steps.push_archive.outputs.tags != '[]' }}
        run: |
          cd ghcr.io/${{ github.repository }}/vuls-data-raw-epss/

          mkdir vuls-data-raw-epss/
          mv $(date "+%Y") vuls-data-raw-epss

          git -C vuls-data-raw-epss -c init.defaultBranch=main init .
          
          if git -C vuls-data-raw-epss remote | grep -q "^origin$"; then
            git -C vuls-data-raw-epss remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-raw-epss
          else
            git -C vuls-data-raw-epss remote add origin ghcr.io/${{ github.repository }}:vuls-data-raw-epss
          fi
          
          git -C vuls-data-raw-epss config user.email "action@github.com"
          git -C vuls-data-raw-epss config user.name "GitHub Action"
          git -C vuls-data-raw-epss add $(date "+%Y")
          git -C vuls-data-raw-epss commit -m "update" -m "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ job.check_run_id }}"
          
          vuls-data-update dotgit compress vuls-data-raw-epss
          vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ github.repository }}:vuls-data-raw-epss vuls-data-raw-epss.tar.zst

  gc:
    name: GC vulsio/vuls-data-db-archive:${{ matrix.tag }}
    needs: [archive]
    if: ${{ needs.archive.outputs.tags != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.archive.outputs.tags) }}
    uses: ./.github/workflows/gc.yml
    with:
      repository: vulsio/vuls-data-db-archive
      tag: ${{ matrix.tag }}
      pack-threads: 2
      pack-windowMemory: 4g
