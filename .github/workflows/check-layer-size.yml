name: Check if layer size exceeds threshold

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      tag:
        required: true
        type: string
      media-type:
        required: true
        type: string
      threshold-mb:
        required: true
        type: number
    outputs:
      exceeded:
        value: ${{ jobs.check.outputs.exceeded }}
  workflow_dispatch:
    inputs:
      repository:
        required: true
        default: vulsio/vuls-data-db
        type: choice
        options:
          - vulsio/vuls-data-db
          - vulsio/vuls-data-db-archive
          - vulsio/vuls-data-db-backup
      tag:
        required: true
        type: string
      media-type:
        required: true
        default: "application/vnd.vulsio.vuls-data-db.dotgit.layer.v1.tar+zstd"
        type: string
      threshold-mb:
        required: true
        type: number

jobs:
  check:
    name: Check if ghcr.io/${{ inputs.repository }}:${{ inputs.tag }} exceeds ${{ inputs.threshold-mb }}MB
    runs-on: ubuntu-latest
    outputs:
      exceeded: ${{ steps.check.outputs.exceeded }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - name: Install vuls-data-update
        run: go install github.com/MaineK00n/vuls-data-update/cmd/vuls-data-update@main

      - name: Check Layer Size
        id: check
        run: |
          SIZE=$(vuls-data-update dotgit registry status ghcr.io/${{ inputs.repository }}:${{ inputs.tag }} | jq '.layers[] | select( .mediaType == "${{ inputs.media-type }}") | .size')
          echo "repository size [KB]:" $(( ${SIZE} / 1024 ))
          echo "repository size [MB]:" $(( ${SIZE} / 1024 / 1024 ))
          if [ ${SIZE} -gt $((${{ inputs.threshold-mb }} * 1024 * 1024)) ]; then
            echo "exceeded=true" >> $GITHUB_OUTPUT
          fi
