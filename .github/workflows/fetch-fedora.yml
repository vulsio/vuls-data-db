name: Fetch Fedora

on:
  workflow_call:
  workflow_dispatch:

jobs:
  fedora-release:
    name: Fetch fedora release
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.fetch.outputs.release }}
    steps:
      - name: Fetch Release
        id: fetch
        run: |
          curl --parallel --parallel-immediate  --parallel-max 3 --retry 10 -o "#1.json" "https://bodhi.fedoraproject.org/releases/?page=[1-$(curl -s --retry 10 "https://bodhi.fedoraproject.org/releases/?page=1&rows_per_page=10" | jq .pages)]&rows_per_page=10"
          echo "release=$(cat *.json | jq -r '.releases[].name' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  fetch:
    name: Fetch vuls-data-raw-fedora ${{ matrix.release }}
    runs-on: ubuntu-latest
    needs: fedora-release
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        release: ${{ fromJson(needs.fedora-release.outputs.release) }}
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Install Oras
        run: |
          # https://oras.land/docs/installation/#linux
          VERSION="1.2.2"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          repository: MaineK00n/vuls-data-update
          ref: main

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: go install
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
        run: |
          oras pull ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
          tar -xf vuls-data-raw-fedora.tar.zst
          rm vuls-data-raw-fedora.tar.zst

      - name: Fetch
        run: vuls-data-update fetch fedora --dir vuls-data-raw-fedora ${{ matrix.release }} --retry 10

      - name: Set Git config
        run: |
          git -C vuls-data-raw-fedora config user.email "action@github.com"
          git -C vuls-data-raw-fedora config user.name "GitHub Action"

      - name: Restore
        run: |
          deleted=$(git -C vuls-data-raw-fedora ls-files --deleted | grep -v ${{ matrix.release }}/ || [[ $? == 1 ]])
          if [[ -n ${deleted} ]]; then
              git -C vuls-data-raw-fedora restore ${deleted}
          fi

      - name: Commit
        run: |
          if [[ -n $(git -C vuls-data-raw-fedora status --porcelain) ]]; then
            git -C vuls-data-raw-fedora add ${{ matrix.release }}
            git -C vuls-data-raw-fedora commit -m "update ${{ matrix.release }}"
          fi

      - name: Create dotgit tarball
        run: |
          mv vuls-data-raw-fedora vuls-data-raw-fedora.tmp
          mkdir vuls-data-raw-fedora
          mv vuls-data-raw-fedora.tmp/.git vuls-data-raw-fedora
          tar --remove-files -acf vuls-data-raw-fedora.tar.zst vuls-data-raw-fedora

      - name: Login to GitHub Packages Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
        run: |
          oras push ghcr.io/${{ github.repository }}:vuls-data-raw-fedora vuls-data-raw-fedora.tar.zst:application/vnd.vulsio.vuls-data-db.dotgit.layer.v1.tar+zstd
