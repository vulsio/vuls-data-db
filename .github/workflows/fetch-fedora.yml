name: Fetch Fedora

on:
  workflow_call:
  workflow_dispatch:

jobs:
  fedora-release:
    name: Fetch fedora release
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.fetch.outputs.release }}
    steps:
      - name: Fetch Release
        id: fetch
        run: |
          curl --parallel --parallel-immediate  --parallel-max 3 --retry 10 -o "#1.json" "https://bodhi.fedoraproject.org/releases/?page=[1-$(curl -s --retry 10 "https://bodhi.fedoraproject.org/releases/?page=1&rows_per_page=10" | jq .pages)]&rows_per_page=10"
          echo "release=$(cat *.json | jq -r '.releases[].name' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  fetch:
    name: Fetch vuls-data-raw-fedora ${{ matrix.release }}
    runs-on: ubuntu-latest
    needs: fedora-release
    strategy:
      fail-fast: false
      matrix:
        release: ${{ fromJson(needs.fedora-release.outputs.release) }}
    outputs:
      total: ${{ strategy.job-total }}
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: main

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Fetch
        run: |
          mkdir vuls-data-raw-fedora
          vuls-data-update fetch fedora --dir vuls-data-raw-fedora ${{ matrix.release }} --retry 10

      - name: Create tarball
        run: tar --remove-files -acf vuls-data-raw-fedora.tar.zst vuls-data-raw-fedora || [[ $? == 1 ]]

      - name: Push ghcr.io/vulsio/vuls-data-db:fedora-data-${{ strategy.job-index }}
        run: vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/vulsio/vuls-data-db:fedora-data-${{ strategy.job-index }} vuls-data-raw-fedora.tar.zst

  commit:
    name: Commit vuls-data-raw-fedora
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: [fetch]
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - name: Install vuls-data-update
        run: go install github.com/MaineK00n/vuls-data-update/cmd/vuls-data-update@main

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
        run: vuls-data-update dotgit pull --dir . --checkout main ghcr.io/${{ github.repository }}:vuls-data-raw-fedora

      - name: Aggregate fedora-data-*
        run: |
          for index in $(seq 0 $((${{ needs.fetch.outputs.total }}-1))); do
            vuls-data-update dotgit pull --dir . --checkout "" ghcr.io/${{ github.repository }}:fedora-data-${index}
            if ls ghcr.io/${{ github.repository }}/fedora-data-${index}/* >/dev/null 2>&1; then
              mv ghcr.io/${{ github.repository }}/fedora-data-${index}/* ghcr.io/${{ github.repository }}/vuls-data-raw-fedora/ 
            fi
            rmdir ghcr.io/${{ github.repository }}/fedora-data-${index}
          done

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora remote add origin ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-raw-fedora commit -m "update" -m "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ job.check_run_id }}"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-raw-fedora

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-raw-fedora
        run: vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ github.repository }}:vuls-data-raw-fedora vuls-data-raw-fedora.tar.zst

  cleanup:
    name: Cleanup fedora-data-*
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [commit]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - name: Install vuls-data-update
        run: go install github.com/MaineK00n/vuls-data-update/cmd/vuls-data-update@main

      - name: Cleanup fedora-data-* images
        run: vuls-data-update dotgit registry ls --repositories "ghcr.io/vulsio/vuls-data-db" --tagged-only --token ${{ secrets.GITHUB_TOKEN }} | jq -r '.[] | select(.name | startswith("ghcr.io/vulsio/vuls-data-db:fedora-data-")) | .digest' | xargs -I {} vuls-data-update dotgit registry delete --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/vulsio/vuls-data-db@{}
