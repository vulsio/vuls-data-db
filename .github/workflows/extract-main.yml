name: Extract Main

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      branch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      target:
        required: true
        type: choice
        options:
          - alma-errata
          - alma-osv
          # - alma-oval
          - alpine-secdb
          - alpine-osv
          - amazon
          # - android-osv
          - arch
          # - bitnami-osv
          # - cargo-ghsa
          # - cargo-osv
          # - cargo-db
          # - chainguard-osv
          - cisa-kev
          # - composer-ghsa
          # - composer-glsa
          # - composer-osv
          # - composer-db
          # - conan-glsa
          # - debian-osv
          # - debian-oval
          # - debian-security-tracker-api
          # - debian-security-tracker-salsa
          - epss
          # - erlang-ghsa
          # - erlang-osv
          # - exploit-exploitdb
          # - exploit-github
          # - exploit-inthewild
          # - exploit-trickest
          - fedora
          # - fortinet-handmade
          # - fortinet-cvrf
          - freebsd
          # - gentoo
          # - ghactions-osv
          # - git-osv
          # - golang-ghsa
          # - golang-glsa
          # - golang-osv
          # - golang-db
          # - golang-vulndb
          # - haskell-osv
          # - jvn-feed-detail
          # - jvn-feed-product
          # - jvn-feed-rss
          # - linux-osv
          # - maven-ghsa
          # - maven-glsa
          # - maven-osv
          # - microsoft-bulletin
          # - microsoft-cvrf
          # - microsoft-msuc
          # - microsoft-wsusscn2
          # - mitre-attack
          # - mitre-capec
          # - mitre-cvrf
          # - mitre-cwe
          # - mitre-emb3d
          # - mitre-v4
          - mitre-v5
          # - msf
          # - netbsd
          # - npm-ghsa
          # - npm-glsa
          # - npm-osv
          # - npm-db
          # - nuget-ghsa
          # - nuget-glsa
          # - nuget-osv
          # - nvd-api-cpe
          # - nvd-feed-cve-v1
          # - nvd-feed-cpe-v1
          # - nvd-feed-cpematch-v1
          # - nvd-feed-cve-v2
          # - nvd-feed-cpe-v2
          # - nvd-feed-cpematch-v2
          - oracle-linux
          # - oss-fuzz-osv
          # - perl-db
          # - pip-ghsa
          # - pip-glsa
          # - pip-osv
          # - pip-db
          # - pub-ghsa
          # - pub-osv
          # - r-osv
          # - redhat-cve
          # - redhat-cvrf
          # - redhat-osv
          - rocky-errata
          # - rocky-osv
          # - rubygems-ghsa
          # - rubygems-glsa
          # - rubygems-osv
          # - rubygems-db
          # - snort
          # - suse-oval
          # - suse-cvrf
          # - suse-cvrf-cve
          # - suse-csaf
          # - suse-csaf-vex
          # - suse-osv
          # - swift-ghsa
          # - swift-osv
          # - ubuntu-oval
          - ubuntu-cve-tracker
          # - ubuntu-osv
          # - ubuntu-vex
          # - vulncheck-kev
          # - wolfi-osv
      branch:
        required: true
        type: choice
        options:
          - main
          - nightly

jobs:
  extract:
    name: Extract vuls-data-extracted-${{ inputs.target }}@${{ inputs.branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5
        with:
          repository: MaineK00n/vuls-data-update
          ref: ${{ inputs.branch }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install vuls-data-update
        run: go install ./cmd/vuls-data-update

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}
        run: vuls-data-update dotgit pull --dir . --checkout main --restore ghcr.io/${{ github.repository }}:vuls-data-raw-${{ inputs.target }}

      - name: Pull ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }}
        run: vuls-data-update dotgit pull --dir . --checkout ${{ inputs.branch }} ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }}

      - name: Extract
        run: vuls-data-update extract ${{ inputs.target }} --dir ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} ghcr.io/${{ github.repository }}/vuls-data-raw-${{ inputs.target }}

      - name: Set Git config
        run: |
          if git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} remote | grep -q "^origin$"; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} remote set-url origin ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }}
          else
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} remote add origin ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }}
          fi
          git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} config user.email "action@github.com"
          git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} config user.name "GitHub Action"

      - name: Commit
        run: |
          if [[ -n $(git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} status --porcelain) ]]; then
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} add .
            git -C ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }} commit -m "update"
          fi

      - name: Create dotgit tarball
        run: vuls-data-update dotgit compress ghcr.io/${{ github.repository }}/vuls-data-extracted-${{ inputs.target }}

      - name: Push ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }}
        run: vuls-data-update dotgit registry push --force --token ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ github.repository }}:vuls-data-extracted-${{ inputs.target }} vuls-data-extracted-${{ inputs.target }}.tar.zst
